{"version":3,"sources":["Components/InputCity.js","Components/WeatherInfo.js","Components/CityAndDate.js","Components/SingleForecast.js","Components/DailyForecast.js","Components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","click","useState","city","setCity","className","type","placeholder","value","onChange","e","target","onKeyDown","key","console","log","onClick","data","length","feels_like","Math","round","parseFloat","daily","day","low","temp","min","high","max","wind_gust","pressure","humidity","forecast","name","sys","country","id","Date","getDay","getDate","getMonth","weather","description","style","color","icon","date","index","src","d","MonthandDay","map","sunrise","App","appid","weatherData","updateWeatherData","updateForecast","badInput","updateInput","request1","cityname","lon","lat","a","fetch","resp","json","then","coord","request2","catch","Error","CityAndDate","WeatherInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c02d777.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nconst MyComponent = ({click}) => {\r\n    const[city,setCity,incorrect] = useState('');\r\n\r\n    const badInput = () =>{\r\n        return <div>\r\n            <h1>Please enter city again</h1>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={\"search-box\"}>\r\n\r\n                <input type=\"text\" placeholder={\"Enter city\"} value = {city} className={\"search-txt\"} onChange={(e) => setCity(e.target.value)}  onKeyDown={(e) => {\r\n                    if(e.key === 'Enter'){\r\n                        click(city);\r\n                        console.log(\"It has been clicked \" + city)\r\n                        setCity('');\r\n                    }\r\n                }} />\r\n                <button className={\"search-button\"} onClick={() => {\r\n                    click(city);\r\n                    console.log(\"It has been clicked \" + city)\r\n                    setCity('');\r\n                }} >\r\n                    <i className=\"fas fa-search\"/>\r\n                </button>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React from 'react';\r\nconst MyComponent = ({data}) => {\r\n    if(data.length === 0){\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n\r\n    console.log(data);\r\n\r\n    var feels_like = Math.round(parseFloat(data.daily[0].feels_like.day)-273.15) ;\r\n    var low = Math.round(parseFloat(data.daily[0].temp.min)-273.15);\r\n    var high = Math.round(parseFloat(data.daily[0].temp.max)-273.15);\r\n    return (\r\n\r\n        <div className={\"cards transparent\"}>\r\n            <div className={\"child_cards\"}>\r\n                <h2>Gust</h2>\r\n                <h2 className={\"child-style\"}>{data.daily[0].wind_gust}mph</h2>\r\n            </div>\r\n\r\n            <div className={\"child_cards\"}>\r\n                <h2>feels_like</h2>\r\n                <h2 className={\"child-style\"}>{feels_like}{'\\u00b0'}c</h2>\r\n            </div>\r\n\r\n            <div className={\"child_cards \"}>\r\n                <h2>Low</h2>\r\n                <h2 className={\"child-style\"}>{low}{'\\u00b0'}c</h2>\r\n            </div>\r\n\r\n            <div className={\"child_cards \"}>\r\n                <h2>High</h2>\r\n                <h2 className={\"child-style\"}>{high}{'\\u00b0'}c</h2>\r\n            </div>\r\n\r\n            <div className={\"child_cards\"}>\r\n                <h2>Pressure</h2>\r\n                <h2 className={\"child-style\"}>{data.daily[0].pressure}mb</h2>\r\n            </div>\r\n\r\n            <div className={\"child_cards\"}>\r\n                <h2>Humidity</h2>\r\n                <h2 className={\"child-style\"}>{data.daily[0].humidity}%</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React from 'react';\r\nconst MyComponent = ({data,forecast}) => {\r\n    if(data.length === 0 || forecast.length === 0){\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n\r\n\r\n    const getDay = (day) =>{\r\n        const week = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\r\n        return week[day];\r\n    }\r\n\r\n    const getMonth = (day) =>{\r\n        const week = [\"January\",\"February\",\"March\",\"April\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        return week[day-1];\r\n    }\r\n\r\n    const temp = Math.round(forecast.daily[0].temp.day-273.15);\r\n\r\n\r\n    return (\r\n\r\n        <div className={\"cityname\"}>\r\n            <br/>\r\n           <h1 className={\"name\"}>{data.name}, {data.sys.country}</h1>\r\n            <h2 id = \"description\" className={\"date\"}>{getDay(new Date().getDay()) +' ' + new Date().getDate() + ' ' + getMonth(new Date().getMonth()) + ', ' + data.weather[0].description }</h2>\r\n            <h2 className={\"temp\"}>{temp}{'\\u00b0'}c</h2>\r\n            <i className=\"fas fa-cloud fa-10x icon\"  style={{color: 'white'}}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React from 'react';\r\n\r\nconst MyComponent = ({min,max,icon,date,index}) => {\r\n\r\n\r\n    const MonthandDay = (date) =>{\r\n        date = date*1000;\r\n        const d = new Date(date);\r\n\r\n        return d.getDate();\r\n    }\r\n\r\n\r\n   const day= (date) =>{\r\n       date = date*1000;\r\n       const d = new Date(date);\r\n\r\n       return getDay(d.getDay());\r\n   }\r\n\r\n\r\n    const getDay = (day) =>{\r\n        const week = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\r\n        return week[day];\r\n    }\r\n\r\n\r\n    min = Math.round(min-273.15);\r\n    max = Math.round(max-273.15);\r\n\r\n    const src = `http://openweathermap.org/img/w/${icon}.png`\r\n    return (\r\n        <div className={\"single transparent\"}>\r\n            {index == 0 ?  <h6>Today</h6>: <h6>{day(date) + ' ' + MonthandDay(date)}</h6>}\r\n            <img src = {src} id={\"imgs\"}/>\r\n            <h6>{max}{'\\u00b0'}</h6>\r\n            <h6>{min}{'\\u00b0'}</h6>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React from 'react';\r\nimport Single from './SingleForecast'\r\nconst MyComponent = ({forecast}) => {\r\n\r\n\r\n    if(forecast.length === 0){\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n\r\n    const daily = forecast.daily;\r\n\r\n    return (\r\n        <div className={\"forecast\"}>\r\n            {daily.map((daily,index) => <Single min = {daily.temp.min} max = {daily.temp.max} icon = {daily.weather[0].icon} date = {daily.sunrise} index = {index} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React from 'react';\r\n\r\nconst MyComponent = () => {\r\n    return (\r\n        <div className=\"error transparent\">\r\n           City was not found, please enter another city\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import './App.css';\nimport EnterCity from './Components/InputCity'\nimport WeatherInfo from './Components/WeatherInfo'\nimport {useState} from 'react';\nimport CityAndDate from './Components/CityAndDate'\nimport Daily16Forecast from './Components/DailyForecast'\nimport Error from './Components/Error'\nfunction App() {\n    const key = 'd1e022b71a655ea6b4783e0b49664229';\n    var lon = 0;\n    var lat = 0;\n    const apiURLReq1 = 'https://api.openweathermap.org/data/2.5/weather?q=';\n    const apiURLReq2 = 'https://api.openweathermap.org/data/2.5/onecall?lat=';\n    const appid = '&appid=';\n    const lonid = \"&lon=\"\n    const[weatherData,updateWeatherData] = useState([]);\n    const[forecast,updateForecast] = useState([]);\n    const [badInput,updateInput] = useState(false);\n    // Once user enters a city, we want to retrieve data\n    const click = (cityname) => request1(cityname,lon,lat);\n    const request1 = async (cityname,lon,lat) =>{\n       await fetch(apiURLReq1 + cityname+ appid + key)\n            .then( await function(resp) { return resp.json() }) // Convert data to json\n            .then(await function(data) {\n                console.log(data);\n                   lon = data.coord.lon;\n                   lat = data.coord.lat;\n               request2(lon,lat);\n                updateWeatherData(data);\n                updateInput(false);\n\n            })\n            .catch(function(e) {\n                updateInput(true);\n\n\n            });\n    }\n\n    const request2 = async (lon,lat) =>{\n\n        await fetch(apiURLReq2+ lat+ lonid + lon+ appid + key)\n            .then(function(resp) { return resp.json() }) // Convert data to json\n            .then(function(data) {\n                console.log(data);\n                updateForecast(data);\n            })\n            .catch(function(e) {\n                console.log(\"something is wrong with first call\" + e)\n            });\n    }\n\n    return (\n    <div className=\"App\">\n        <EnterCity click = {click} />\n        {badInput ? <Error/> :  <CityAndDate data = {weatherData} forecast = {forecast}/>}\n        {badInput ? '' :   <WeatherInfo data = {forecast} />}\n        {badInput ? '' :     <Daily16Forecast forecast = {forecast}/> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}